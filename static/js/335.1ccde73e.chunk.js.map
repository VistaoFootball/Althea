{"version":3,"file":"static/js/335.1ccde73e.chunk.js","mappings":"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","sources":["../node_modules/flickr-justified-gallery/index.js","../node_modules/throttle-debounce/throttle.js","../node_modules/raf-schd/dist/raf-schd.esm.js","../node_modules/flickr-justified-gallery/src/fjGallery.esm.js","../node_modules/throttle-debounce/debounce.js","../node_modules/global/window.js","../node_modules/justified-layout/lib/index.js","../node_modules/justified-layout/lib/row.js","../node_modules/lite-ready/liteready.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["module.exports = require('./src/fjGallery.esm').default;\n","/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param  {number}    delay -          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {boolean}   [noTrailing] -   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds while the\n *                                    throttled-function is being called. If noTrailing is false or unspecified, callback will be executed one final time\n *                                    after the last throttled-function call. (After the throttled-function has not been called for `delay` milliseconds,\n *                                    the internal counter is reset).\n * @param  {Function}  callback -       A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                    to `callback` when the throttled-function is executed.\n * @param  {boolean}   [debounceMode] - If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is false (at end),\n *                                    schedule `callback` to execute after `delay` ms.\n *\n * @returns {Function}  A new, throttled, function.\n */\nexport default function (delay, noTrailing, callback, debounceMode) {\n\t/*\n\t * After wrapper has stopped being called, this timeout ensures that\n\t * `callback` is executed at the proper times in `throttle` and `end`\n\t * debounce modes.\n\t */\n\tlet timeoutID;\n\tlet cancelled = false;\n\n\t// Keep track of the last time `callback` was executed.\n\tlet lastExec = 0;\n\n\t// Function to clear existing timeout\n\tfunction clearExistingTimeout() {\n\t\tif (timeoutID) {\n\t\t\tclearTimeout(timeoutID);\n\t\t}\n\t}\n\n\t// Function to cancel next exec\n\tfunction cancel() {\n\t\tclearExistingTimeout();\n\t\tcancelled = true;\n\t}\n\n\t// `noTrailing` defaults to falsy.\n\tif (typeof noTrailing !== 'boolean') {\n\t\tdebounceMode = callback;\n\t\tcallback = noTrailing;\n\t\tnoTrailing = undefined;\n\t}\n\n\t/*\n\t * The `wrapper` function encapsulates all of the throttling / debouncing\n\t * functionality and when executed will limit the rate at which `callback`\n\t * is executed.\n\t */\n\tfunction wrapper(...arguments_) {\n\t\tlet self = this;\n\t\tlet elapsed = Date.now() - lastExec;\n\n\t\tif (cancelled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Execute `callback` and update the `lastExec` timestamp.\n\t\tfunction exec() {\n\t\t\tlastExec = Date.now();\n\t\t\tcallback.apply(self, arguments_);\n\t\t}\n\n\t\t/*\n\t\t * If `debounceMode` is true (at begin) this is used to clear the flag\n\t\t * to allow future `callback` executions.\n\t\t */\n\t\tfunction clear() {\n\t\t\ttimeoutID = undefined;\n\t\t}\n\n\t\tif (debounceMode && !timeoutID) {\n\t\t\t/*\n\t\t\t * Since `wrapper` is being called for the first time and\n\t\t\t * `debounceMode` is true (at begin), execute `callback`.\n\t\t\t */\n\t\t\texec();\n\t\t}\n\n\t\tclearExistingTimeout();\n\n\t\tif (debounceMode === undefined && elapsed > delay) {\n\t\t\t/*\n\t\t\t * In throttle mode, if `delay` time has been exceeded, execute\n\t\t\t * `callback`.\n\t\t\t */\n\t\t\texec();\n\t\t} else if (noTrailing !== true) {\n\t\t\t/*\n\t\t\t * In trailing throttle mode, since `delay` time has not been\n\t\t\t * exceeded, schedule `callback` to execute `delay` ms after most\n\t\t\t * recent execution.\n\t\t\t *\n\t\t\t * If `debounceMode` is true (at begin), schedule `clear` to execute\n\t\t\t * after `delay` ms.\n\t\t\t *\n\t\t\t * If `debounceMode` is false (at end), schedule `callback` to\n\t\t\t * execute after `delay` ms.\n\t\t\t */\n\t\t\ttimeoutID = setTimeout(\n\t\t\t\tdebounceMode ? clear : exec,\n\t\t\t\tdebounceMode === undefined ? delay - elapsed : delay\n\t\t\t);\n\t\t}\n\t}\n\n\twrapper.cancel = cancel;\n\n\t// Return the wrapper function.\n\treturn wrapper;\n}\n","var rafSchd = function rafSchd(fn) {\n  var lastArgs = [];\n  var frameId = null;\n\n  var wrapperFn = function wrapperFn() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    lastArgs = args;\n\n    if (frameId) {\n      return;\n    }\n\n    frameId = requestAnimationFrame(function () {\n      frameId = null;\n      fn.apply(void 0, lastArgs);\n    });\n  };\n\n  wrapperFn.cancel = function () {\n    if (!frameId) {\n      return;\n    }\n\n    cancelAnimationFrame(frameId);\n    frameId = null;\n  };\n\n  return wrapperFn;\n};\n\nexport default rafSchd;\n","import { debounce } from 'throttle-debounce';\nimport rafSchd from 'raf-schd';\nimport domReady from 'lite-ready';\nimport justifiedLayout from 'justified-layout';\nimport { window } from 'global';\n\n// list with all fjGallery instances\n// need to render all in one scroll/resize event\nconst fjGalleryList = [];\n\nconst updateFjGallery = rafSchd(() => {\n    fjGalleryList.forEach((item) => {\n        item.resize();\n    });\n});\n\nwindow.addEventListener('resize', updateFjGallery);\nwindow.addEventListener('orientationchange', updateFjGallery);\nwindow.addEventListener('load', updateFjGallery);\ndomReady(() => {\n    updateFjGallery();\n});\n\n// get image dimensions\n// thanks https://gist.github.com/dimsemenov/5382856\nfunction getImgDimensions(img, cb) {\n    let interval;\n    let hasSize = false;\n    let addedListeners = false;\n\n    const onHasSize = () => {\n        if (hasSize) {\n            cb(hasSize);\n            return;\n        }\n\n        hasSize = {\n            width: img.naturalWidth,\n            height: img.naturalHeight,\n        };\n        cb(hasSize);\n\n        clearInterval(interval);\n        if (addedListeners) {\n            // eslint-disable-next-line no-use-before-define\n            removeListeners();\n        }\n    };\n    const onLoaded = () => {\n        onHasSize();\n    };\n    const onError = () => {\n        onHasSize();\n    };\n    const checkSize = () => {\n        if (img.naturalWidth > 0) {\n            onHasSize();\n        }\n    };\n    const addListeners = () => {\n        addedListeners = true;\n        img.addEventListener('load', onLoaded);\n        img.addEventListener('error', onError);\n    };\n    const removeListeners = () => {\n        addedListeners = false;\n        img.removeEventListener('load', onLoaded);\n        img.removeEventListener('error', onError);\n    };\n\n    checkSize();\n\n    if (!hasSize) {\n        addListeners();\n        interval = setInterval(checkSize, 100);\n    }\n}\n\nlet instanceID = 0;\n\n// fjGallery class\nclass fjGallery {\n    constructor(container, userOptions) {\n        const self = this;\n\n        self.instanceID = instanceID++;\n\n        self.$container = container;\n\n        self.images = [];\n\n        self.defaults = {\n            itemSelector: '.fj-gallery-item',\n            imageSelector: 'img',\n            gutter: 10, // supports object like `{ horizontal: 10, vertical: 10 }`.\n            rowHeight: 320,\n            rowHeightTolerance: 0.25, // [0, 1]\n            maxRowsCount: Number.POSITIVE_INFINITY,\n            lastRow: 'left', // left, center, right, hide\n            transitionDuration: '0.3s',\n            calculateItemsHeight: false,\n            resizeDebounce: 100,\n            isRtl: self.css(self.$container, 'direction') === 'rtl',\n\n            // events\n            onInit: null, // function() {}\n            onDestroy: null, // function() {}\n            onAppendImages: null, // function() {}\n            onBeforeJustify: null, // function() {}\n            onJustify: null, // function() {}\n        };\n\n        // prepare data-options\n        const dataOptions = self.$container.dataset || {};\n        const pureDataOptions = {};\n        Object.keys(dataOptions).forEach((key) => {\n            const loweCaseOption = key.substr(0, 1).toLowerCase() + key.substr(1);\n            if (loweCaseOption && typeof self.defaults[loweCaseOption] !== 'undefined') {\n                pureDataOptions[loweCaseOption] = dataOptions[key];\n            }\n        });\n\n        self.options = {\n            ...self.defaults,\n            ...pureDataOptions,\n            ...userOptions,\n        };\n\n        self.pureOptions = {\n            ...self.options,\n        };\n\n        // debounce for resize\n        self.resize = debounce(self.options.resizeDebounce, self.resize);\n        self.justify = rafSchd(self.justify.bind(self));\n\n        self.init();\n    }\n\n    // add styles to element\n    css(el, styles) {\n        if (typeof styles === 'string') {\n            return window.getComputedStyle(el).getPropertyValue(styles);\n        }\n\n        Object.keys(styles).forEach((key) => {\n            el.style[key] = styles[key];\n        });\n        return el;\n    }\n\n    // set temporary transition with event listener\n    applyTransition($item, properties) {\n        const self = this;\n\n        // Remove previous event listener\n        self.onTransitionEnd($item)();\n\n        // Add transitions\n        self.css($item, {\n            'transition-property': properties.join(', '),\n            'transition-duration': self.options.transitionDuration,\n        });\n\n        // Add event listener\n        $item.addEventListener('transitionend', self.onTransitionEnd($item, properties), false);\n    }\n\n    onTransitionEnd($item) {\n        const self = this;\n\n        return () => {\n            self.css($item, {\n                'transition-property': '',\n                'transition-duration': '',\n            });\n\n            $item.removeEventListener('transitionend', self.onTransitionEnd($item));\n        };\n    }\n\n    // add to fjGallery instances list\n    addToFjGalleryList() {\n        fjGalleryList.push(this);\n        updateFjGallery();\n    }\n\n    // remove from fjGallery instances list\n    removeFromFjGalleryList() {\n        const self = this;\n\n        fjGalleryList.forEach((item, key) => {\n            if (item.instanceID === self.instanceID) {\n                fjGalleryList.splice(key, 1);\n            }\n        });\n    }\n\n    init() {\n        const self = this;\n\n        self.appendImages(self.$container.querySelectorAll(self.options.itemSelector));\n\n        self.addToFjGalleryList();\n\n        // call onInit event\n        if (self.options.onInit) {\n            self.options.onInit.call(self);\n        }\n    }\n\n    // append images\n    appendImages($images) {\n        const self = this;\n\n        // check if jQuery\n        if (window.jQuery && $images instanceof window.jQuery) {\n            $images = $images.get();\n        }\n\n        if (!$images || !$images.length) {\n            return;\n        }\n\n        $images.forEach(($item) => {\n            // if $images is jQuery, for some reason in this array there is undefined item, that not a DOM,\n            // so we need to check for $item.querySelector.\n            if ($item && !$item.fjGalleryImage && $item.querySelector) {\n                const $image = $item.querySelector(self.options.imageSelector);\n\n                if ($image) {\n                    $item.fjGalleryImage = self;\n                    const data = {\n                        $item,\n                        $image,\n                        width: parseFloat($image.getAttribute('width')) || false,\n                        height: parseFloat($image.getAttribute('height')) || false,\n                        loadSizes() {\n                            const itemData = this;\n                            getImgDimensions($image, (dimensions) => {\n                                if (itemData.width !== dimensions.width || itemData.height !== dimensions.height) {\n                                    itemData.width = dimensions.width;\n                                    itemData.height = dimensions.height;\n                                    self.resize();\n                                }\n                            });\n                        },\n                    };\n                    data.loadSizes();\n\n                    self.images.push(data);\n                }\n            }\n        });\n\n        // call onAppendImages event\n        if (self.options.onAppendImages) {\n            self.options.onAppendImages.call(self, [$images]);\n        }\n\n        self.justify();\n    }\n\n    // justify images\n    justify() {\n        const self = this;\n        const justifyArray = [];\n\n        self.justifyCount = (self.justifyCount || 0) + 1;\n\n        // call onBeforeJustify event\n        if (self.options.onBeforeJustify) {\n            self.options.onBeforeJustify.call(self);\n        }\n\n        self.images.forEach((data) => {\n            if (data.width && data.height) {\n                justifyArray.push(data.width / data.height);\n            }\n        });\n\n        const justifiedOptions = {\n            containerWidth: self.$container.getBoundingClientRect().width,\n            containerPadding: {\n                top: parseFloat(self.css(self.$container, 'padding-top')) || 0,\n                right: parseFloat(self.css(self.$container, 'padding-right')) || 0,\n                bottom: parseFloat(self.css(self.$container, 'padding-bottom')) || 0,\n                left: parseFloat(self.css(self.$container, 'padding-left')) || 0,\n            },\n            boxSpacing: self.options.gutter,\n            targetRowHeight: self.options.rowHeight,\n            targetRowHeightTolerance: self.options.rowHeightTolerance,\n            maxNumRows: self.options.maxRowsCount,\n            showWidows: self.options.lastRow !== 'hide',\n        };\n        const justifiedData = justifiedLayout(justifyArray, justifiedOptions);\n\n        // Align last row\n        if (justifiedData.widowCount && (self.options.lastRow === 'center' || self.options.lastRow === 'right')) {\n            const lastItemData = justifiedData.boxes[justifiedData.boxes.length - 1];\n            let gapSize = justifiedOptions.containerWidth - lastItemData.width - lastItemData.left;\n\n            if (self.options.lastRow === 'center') {\n                gapSize /= 2;\n            }\n            if (self.options.lastRow === 'right') {\n                gapSize -= justifiedOptions.containerPadding.right;\n            }\n\n            for (let i = 1; i <= justifiedData.widowCount; i++) {\n                justifiedData.boxes[justifiedData.boxes.length - i].left = justifiedData.boxes[justifiedData.boxes.length - i].left + gapSize;\n            }\n        }\n\n        // RTL compatibility\n        if (self.options.isRtl) {\n            justifiedData.boxes.forEach((boxData, i) => {\n                justifiedData.boxes[i].left = justifiedOptions.containerWidth - justifiedData.boxes[i].left - justifiedData.boxes[i].width - justifiedOptions.containerPadding.right + justifiedOptions.containerPadding.left;\n            });\n        }\n\n        let i = 0;\n        let additionalTopOffset = 0;\n        const rowsMaxHeight = {};\n\n        // Set image sizes.\n        self.images.forEach((data, imgI) => {\n            if (justifiedData.boxes[i] && data.width && data.height) {\n                // calculate additional offset based on actual items height.\n                if (self.options.calculateItemsHeight && typeof rowsMaxHeight[justifiedData.boxes[i].top] === 'undefined' && Object.keys(rowsMaxHeight).length) {\n                    additionalTopOffset += rowsMaxHeight[Object.keys(rowsMaxHeight).pop()] - justifiedData.boxes[imgI - 1].height;\n                }\n\n                if (self.options.transitionDuration && self.justifyCount > 1) {\n                    self.applyTransition(data.$item, ['transform']);\n                }\n\n                self.css(data.$item, {\n                    display: '',\n                    position: 'absolute',\n                    transform: `translateX(${justifiedData.boxes[i].left}px) translateY(${justifiedData.boxes[i].top + additionalTopOffset}px) translateZ(0)`,\n                    width: `${justifiedData.boxes[i].width}px`,\n                });\n\n                // calculate actual items height.\n                if (self.options.calculateItemsHeight) {\n                    const rect = data.$item.getBoundingClientRect();\n\n                    if (typeof rowsMaxHeight[justifiedData.boxes[i].top] === 'undefined' || rowsMaxHeight[justifiedData.boxes[i].top] < rect.height) {\n                        rowsMaxHeight[justifiedData.boxes[i].top] = rect.height;\n                    }\n                }\n\n                i++;\n            } else {\n                self.css(data.$item, {\n                    display: 'none',\n                });\n            }\n        });\n\n        // increase additional offset based on the latest row items height.\n        if (self.options.calculateItemsHeight && Object.keys(rowsMaxHeight).length) {\n            additionalTopOffset += rowsMaxHeight[Object.keys(rowsMaxHeight).pop()] - justifiedData.boxes[justifiedData.boxes.length - 1].height;\n        }\n\n        if (self.options.transitionDuration) {\n            self.applyTransition(self.$container, ['height']);\n        }\n\n        // Set container height.\n        self.css(self.$container, {\n            height: `${justifiedData.containerHeight + additionalTopOffset}px`,\n        });\n\n        // call onJustify event\n        if (self.options.onJustify) {\n            self.options.onJustify.call(self);\n        }\n    }\n\n    // update options and resize gallery items\n    updateOptions(options) {\n        const self = this;\n        self.options = {\n            ...self.options,\n            ...options,\n        };\n        self.justify();\n    }\n\n    destroy() {\n        const self = this;\n\n        self.removeFromFjGalleryList();\n\n        self.justifyCount = 0;\n\n        // call onDestroy event\n        if (self.options.onDestroy) {\n            self.options.onDestroy.call(self);\n        }\n\n        // remove styles.\n        self.css(self.$container, {\n            height: '',\n            transition: '',\n        });\n        self.images.forEach((data) => {\n            self.css(data.$item, {\n                position: '',\n                transform: '',\n                transition: '',\n                width: '',\n                height: '',\n            });\n        });\n\n        // delete fjGalleryImage instance from images\n        self.images.forEach((val) => {\n            delete val.$item.fjGalleryImage;\n        });\n\n        // delete fjGallery instance from container\n        delete self.$container.fjGallery;\n    }\n\n    resize() {\n        const self = this;\n\n        self.justify();\n    }\n}\n\n// global definition\nconst plugin = function (items) {\n    // check for dom element\n    // thanks: http://stackoverflow.com/questions/384286/javascript-isdom-how-do-you-check-if-a-javascript-object-is-a-dom-object\n    if (typeof HTMLElement === 'object' ? items instanceof HTMLElement : items && typeof items === 'object' && items !== null && items.nodeType === 1 && typeof items.nodeName === 'string') {\n        items = [items];\n    }\n\n    const options = arguments[1];\n    const args = Array.prototype.slice.call(arguments, 2);\n    const len = items.length;\n    let k = 0;\n    let ret;\n\n    for (k; k < len; k++) {\n        if (typeof options === 'object' || typeof options === 'undefined') {\n            if (!items[k].fjGallery) {\n                // eslint-disable-next-line new-cap\n                items[k].fjGallery = new fjGallery(items[k], options);\n            }\n        } else if (items[k].fjGallery) {\n            // eslint-disable-next-line prefer-spread\n            ret = items[k].fjGallery[options].apply(items[k].fjGallery, args);\n        }\n        if (typeof ret !== 'undefined') {\n            return ret;\n        }\n    }\n\n    return items;\n};\nplugin.constructor = fjGallery;\n\nexport default plugin;\n","/* eslint-disable no-undefined */\n\nimport throttle from './throttle';\n\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param  {number}   delay -         A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {boolean}  [atBegin] -     Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                  after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                  (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n * @param  {Function} callback -      A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                  to `callback` when the debounced-function is executed.\n *\n * @returns {Function} A new, debounced function.\n */\nexport default function (delay, atBegin, callback) {\n\treturn callback === undefined\n\t\t? throttle(delay, atBegin, false)\n\t\t: throttle(delay, callback, atBegin !== false);\n}\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","/*!\n * Copyright 2019 SmugMug, Inc.\n * Licensed under the terms of the MIT license. Please see LICENSE file in the project root for terms.\n * @license\n */\n\n'use strict';\n\nvar Row = require('./row');\n\n/**\n * Create a new, empty row.\n *\n * @method createNewRow\n * @param layoutConfig {Object} The layout configuration\n * @param layoutData {Object} The current state of the layout\n * @return A new, empty row of the type specified by this layout.\n */\n\nfunction createNewRow(layoutConfig, layoutData) {\n\n\tvar isBreakoutRow;\n\n\t// Work out if this is a full width breakout row\n\tif (layoutConfig.fullWidthBreakoutRowCadence !== false) {\n\t\tif (((layoutData._rows.length + 1) % layoutConfig.fullWidthBreakoutRowCadence) === 0) {\n\t\t\tisBreakoutRow = true;\n\t\t}\n\t}\n\n\treturn new Row({\n\t\ttop: layoutData._containerHeight,\n\t\tleft: layoutConfig.containerPadding.left,\n\t\twidth: layoutConfig.containerWidth - layoutConfig.containerPadding.left - layoutConfig.containerPadding.right,\n\t\tspacing: layoutConfig.boxSpacing.horizontal,\n\t\ttargetRowHeight: layoutConfig.targetRowHeight,\n\t\ttargetRowHeightTolerance: layoutConfig.targetRowHeightTolerance,\n\t\tedgeCaseMinRowHeight: 0.5 * layoutConfig.targetRowHeight,\n\t\tedgeCaseMaxRowHeight: 2 * layoutConfig.targetRowHeight,\n\t\trightToLeft: false,\n\t\tisBreakoutRow: isBreakoutRow,\n\t\twidowLayoutStyle: layoutConfig.widowLayoutStyle\n\t});\n}\n\n/**\n * Add a completed row to the layout.\n * Note: the row must have already been completed.\n *\n * @method addRow\n * @param layoutConfig {Object} The layout configuration\n * @param layoutData {Object} The current state of the layout\n * @param row {Row} The row to add.\n * @return {Array} Each item added to the row.\n */\n\nfunction addRow(layoutConfig, layoutData, row) {\n\n\tlayoutData._rows.push(row);\n\tlayoutData._layoutItems = layoutData._layoutItems.concat(row.getItems());\n\n\t// Increment the container height\n\tlayoutData._containerHeight += row.height + layoutConfig.boxSpacing.vertical;\n\n\treturn row.items;\n}\n\n/**\n * Calculate the current layout for all items in the list that require layout.\n * \"Layout\" means geometry: position within container and size\n *\n * @method computeLayout\n * @param layoutConfig {Object} The layout configuration\n * @param layoutData {Object} The current state of the layout\n * @param itemLayoutData {Array} Array of items to lay out, with data required to lay out each item\n * @return {Object} The newly-calculated layout, containing the new container height, and lists of layout items\n */\n\nfunction computeLayout(layoutConfig, layoutData, itemLayoutData) {\n\n\tvar laidOutItems = [],\n\t\titemAdded,\n\t\tcurrentRow,\n\t\tnextToLastRowHeight;\n\n\t// Apply forced aspect ratio if specified, and set a flag.\n\tif (layoutConfig.forceAspectRatio) {\n\t\titemLayoutData.forEach(function (itemData) {\n\t\t\titemData.forcedAspectRatio = true;\n\t\t\titemData.aspectRatio = layoutConfig.forceAspectRatio;\n\t\t});\n\t}\n\n\t// Loop through the items\n\titemLayoutData.some(function (itemData, i) {\n\n\t\tif (isNaN(itemData.aspectRatio)) {\n\t\t\tthrow new Error(\"Item \" + i + \" has an invalid aspect ratio\");\n\t\t}\n\n\t\t// If not currently building up a row, make a new one.\n\t\tif (!currentRow) {\n\t\t\tcurrentRow = createNewRow(layoutConfig, layoutData);\n\t\t}\n\n\t\t// Attempt to add item to the current row.\n\t\titemAdded = currentRow.addItem(itemData);\n\n\t\tif (currentRow.isLayoutComplete()) {\n\n\t\t\t// Row is filled; add it and start a new one\n\t\t\tlaidOutItems = laidOutItems.concat(addRow(layoutConfig, layoutData, currentRow));\n\n\t\t\tif (layoutData._rows.length >= layoutConfig.maxNumRows) {\n\t\t\t\tcurrentRow = null;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcurrentRow = createNewRow(layoutConfig, layoutData);\n\n\t\t\t// Item was rejected; add it to its own row\n\t\t\tif (!itemAdded) {\n\n\t\t\t\titemAdded = currentRow.addItem(itemData);\n\n\t\t\t\tif (currentRow.isLayoutComplete()) {\n\n\t\t\t\t\t// If the rejected item fills a row on its own, add the row and start another new one\n\t\t\t\t\tlaidOutItems = laidOutItems.concat(addRow(layoutConfig, layoutData, currentRow));\n\t\t\t\t\tif (layoutData._rows.length >= layoutConfig.maxNumRows) {\n\t\t\t\t\t\tcurrentRow = null;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentRow = createNewRow(layoutConfig, layoutData);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\t// Handle any leftover content (orphans) depending on where they lie\n\t// in this layout update, and in the total content set.\n\tif (currentRow && currentRow.getItems().length && layoutConfig.showWidows) {\n\n\t\t// Last page of all content or orphan suppression is suppressed; lay out orphans.\n\t\tif (layoutData._rows.length) {\n\n\t\t\t// Only Match previous row's height if it exists and it isn't a breakout row\n\t\t\tif (layoutData._rows[layoutData._rows.length - 1].isBreakoutRow) {\n\t\t\t\tnextToLastRowHeight = layoutData._rows[layoutData._rows.length - 1].targetRowHeight;\n\t\t\t} else {\n\t\t\t\tnextToLastRowHeight = layoutData._rows[layoutData._rows.length - 1].height;\n\t\t\t}\n\n\t\t\tcurrentRow.forceComplete(false, nextToLastRowHeight);\n\n\t\t} else {\n\n\t\t\t// ...else use target height if there is no other row height to reference.\n\t\t\tcurrentRow.forceComplete(false);\n\n\t\t}\n\n\t\tlaidOutItems = laidOutItems.concat(addRow(layoutConfig, layoutData, currentRow));\n\t\tlayoutConfig._widowCount = currentRow.getItems().length;\n\n\t}\n\n\t// We need to clean up the bottom container padding\n\t// First remove the height added for box spacing\n\tlayoutData._containerHeight = layoutData._containerHeight - layoutConfig.boxSpacing.vertical;\n\t// Then add our bottom container padding\n\tlayoutData._containerHeight = layoutData._containerHeight + layoutConfig.containerPadding.bottom;\n\n\treturn {\n\t\tcontainerHeight: layoutData._containerHeight,\n\t\twidowCount: layoutConfig._widowCount,\n\t\tboxes: layoutData._layoutItems\n\t};\n\n}\n\n/**\n * Takes in a bunch of box data and config. Returns\n * geometry to lay them out in a justified view.\n *\n * @method covertSizesToAspectRatios\n * @param sizes {Array} Array of objects with widths and heights\n * @return {Array} A list of aspect ratios\n */\n\nmodule.exports = function (input, config) {\n\tvar layoutConfig = {};\n\tvar layoutData = {};\n\n\t// Defaults\n\tvar defaults = {\n\t\tcontainerWidth: 1060,\n\t\tcontainerPadding: 10,\n\t\tboxSpacing: 10,\n\t\ttargetRowHeight: 320,\n\t\ttargetRowHeightTolerance: 0.25,\n\t\tmaxNumRows: Number.POSITIVE_INFINITY,\n\t\tforceAspectRatio: false,\n\t\tshowWidows: true,\n\t\tfullWidthBreakoutRowCadence: false,\n\t\twidowLayoutStyle: 'left'\n\t};\n\n\tvar containerPadding = {};\n\tvar boxSpacing = {};\n\n\tconfig = config || {};\n\n\t// Merge defaults and config passed in\n\tlayoutConfig = Object.assign(defaults, config);\n\n\t// Sort out padding and spacing values\n\tcontainerPadding.top = (!isNaN(parseFloat(layoutConfig.containerPadding.top))) ? layoutConfig.containerPadding.top : layoutConfig.containerPadding;\n\tcontainerPadding.right = (!isNaN(parseFloat(layoutConfig.containerPadding.right))) ? layoutConfig.containerPadding.right : layoutConfig.containerPadding;\n\tcontainerPadding.bottom = (!isNaN(parseFloat(layoutConfig.containerPadding.bottom))) ? layoutConfig.containerPadding.bottom : layoutConfig.containerPadding;\n\tcontainerPadding.left = (!isNaN(parseFloat(layoutConfig.containerPadding.left))) ? layoutConfig.containerPadding.left : layoutConfig.containerPadding;\n\tboxSpacing.horizontal = (!isNaN(parseFloat(layoutConfig.boxSpacing.horizontal))) ? layoutConfig.boxSpacing.horizontal : layoutConfig.boxSpacing;\n\tboxSpacing.vertical = (!isNaN(parseFloat(layoutConfig.boxSpacing.vertical))) ? layoutConfig.boxSpacing.vertical : layoutConfig.boxSpacing;\n\n\tlayoutConfig.containerPadding = containerPadding;\n\tlayoutConfig.boxSpacing = boxSpacing;\n\n\t// Local\n\tlayoutData._layoutItems = [];\n\tlayoutData._awakeItems = [];\n\tlayoutData._inViewportItems = [];\n\tlayoutData._leadingOrphans = [];\n\tlayoutData._trailingOrphans = [];\n\tlayoutData._containerHeight = layoutConfig.containerPadding.top;\n\tlayoutData._rows = [];\n\tlayoutData._orphans = [];\n\tlayoutConfig._widowCount = 0;\n\n\t// Convert widths and heights to aspect ratios if we need to\n\treturn computeLayout(layoutConfig, layoutData, input.map(function (item) {\n\t\tif (item.width && item.height) {\n\t\t\treturn { aspectRatio: item.width / item.height };\n\t\t} else {\n\t\t\treturn { aspectRatio: item };\n\t\t}\n\t}));\n};\n","/*!\n * Copyright 2019 SmugMug, Inc.\n * Licensed under the terms of the MIT license. Please see LICENSE file in the project root for terms.\n * @license\n */\n\n/**\n * Row\n * Wrapper for each row in a justified layout.\n * Stores relevant values and provides methods for calculating layout of individual rows.\n *\n * @param {Object} layoutConfig - The same as that passed\n * @param {Object} Initialization parameters. The following are all required:\n * @param params.top {Number} Top of row, relative to container\n * @param params.left {Number} Left side of row relative to container (equal to container left padding)\n * @param params.width {Number} Width of row, not including container padding\n * @param params.spacing {Number} Horizontal spacing between items\n * @param params.targetRowHeight {Number} Layout algorithm will aim for this row height\n * @param params.targetRowHeightTolerance {Number} Row heights may vary +/- (`targetRowHeight` x `targetRowHeightTolerance`)\n * @param params.edgeCaseMinRowHeight {Number} Absolute minimum row height for edge cases that cannot be resolved within tolerance.\n * @param params.edgeCaseMaxRowHeight {Number} Absolute maximum row height for edge cases that cannot be resolved within tolerance.\n * @param params.isBreakoutRow {Boolean} Is this row in particular one of those breakout rows? Always false if it's not that kind of photo list\n * @param params.widowLayoutStyle {String} If widows are visible, how should they be laid out?\n * @constructor\n */\n\nvar Row = module.exports = function (params) {\n\n\t// Top of row, relative to container\n\tthis.top = params.top;\n\n\t// Left side of row relative to container (equal to container left padding)\n\tthis.left = params.left;\n\n\t// Width of row, not including container padding\n\tthis.width = params.width;\n\n\t// Horizontal spacing between items\n\tthis.spacing = params.spacing;\n\n\t// Row height calculation values\n\tthis.targetRowHeight = params.targetRowHeight;\n\tthis.targetRowHeightTolerance = params.targetRowHeightTolerance;\n\tthis.minAspectRatio = this.width / params.targetRowHeight * (1 - params.targetRowHeightTolerance);\n\tthis.maxAspectRatio = this.width / params.targetRowHeight * (1 + params.targetRowHeightTolerance);\n\n\t// Edge case row height minimum/maximum\n\tthis.edgeCaseMinRowHeight = params.edgeCaseMinRowHeight;\n\tthis.edgeCaseMaxRowHeight = params.edgeCaseMaxRowHeight;\n\n\t// Widow layout direction\n\tthis.widowLayoutStyle = params.widowLayoutStyle;\n\n\t// Full width breakout rows\n\tthis.isBreakoutRow = params.isBreakoutRow;\n\n\t// Store layout data for each item in row\n\tthis.items = [];\n\n\t// Height remains at 0 until it's been calculated\n\tthis.height = 0;\n\n};\n\nRow.prototype = {\n\n\t/**\n\t * Attempt to add a single item to the row.\n\t * This is the heart of the justified algorithm.\n\t * This method is direction-agnostic; it deals only with sizes, not positions.\n\t *\n\t * If the item fits in the row, without pushing row height beyond min/max tolerance,\n\t * the item is added and the method returns true.\n\t *\n\t * If the item leaves row height too high, there may be room to scale it down and add another item.\n\t * In this case, the item is added and the method returns true, but the row is incomplete.\n\t *\n\t * If the item leaves row height too short, there are too many items to fit within tolerance.\n\t * The method will either accept or reject the new item, favoring the resulting row height closest to within tolerance.\n\t * If the item is rejected, left/right padding will be required to fit the row height within tolerance;\n\t * if the item is accepted, top/bottom cropping will be required to fit the row height within tolerance.\n\t *\n\t * @method addItem\n\t * @param itemData {Object} Item layout data, containing item aspect ratio.\n\t * @return {Boolean} True if successfully added; false if rejected.\n\t */\n\n\taddItem: function (itemData) {\n\n\t\tvar newItems = this.items.concat(itemData),\n\t\t\t// Calculate aspect ratios for items only; exclude spacing\n\t\t\trowWidthWithoutSpacing = this.width - (newItems.length - 1) * this.spacing,\n\t\t\tnewAspectRatio = newItems.reduce(function (sum, item) {\n\t\t\t\treturn sum + item.aspectRatio;\n\t\t\t}, 0),\n\t\t\ttargetAspectRatio = rowWidthWithoutSpacing / this.targetRowHeight,\n\t\t\tpreviousRowWidthWithoutSpacing,\n\t\t\tpreviousAspectRatio,\n\t\t\tpreviousTargetAspectRatio;\n\n\t\t// Handle big full-width breakout photos if we're doing them\n\t\tif (this.isBreakoutRow) {\n\t\t\t// Only do it if there's no other items in this row\n\t\t\tif (this.items.length === 0) {\n\t\t\t\t// Only go full width if this photo is a square or landscape\n\t\t\t\tif (itemData.aspectRatio >= 1) {\n\t\t\t\t\t// Close out the row with a full width photo\n\t\t\t\t\tthis.items.push(itemData);\n\t\t\t\t\tthis.completeLayout(rowWidthWithoutSpacing / itemData.aspectRatio, 'justify');\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (newAspectRatio < this.minAspectRatio) {\n\n\t\t\t// New aspect ratio is too narrow / scaled row height is too tall.\n\t\t\t// Accept this item and leave row open for more items.\n\n\t\t\tthis.items.push(Object.assign({}, itemData));\n\t\t\treturn true;\n\n\t\t} else if (newAspectRatio > this.maxAspectRatio) {\n\n\t\t\t// New aspect ratio is too wide / scaled row height will be too short.\n\t\t\t// Accept item if the resulting aspect ratio is closer to target than it would be without the item.\n\t\t\t// NOTE: Any row that falls into this block will require cropping/padding on individual items.\n\n\t\t\tif (this.items.length === 0) {\n\n\t\t\t\t// When there are no existing items, force acceptance of the new item and complete the layout.\n\t\t\t\t// This is the pano special case.\n\t\t\t\tthis.items.push(Object.assign({}, itemData));\n\t\t\t\tthis.completeLayout(rowWidthWithoutSpacing / newAspectRatio, 'justify');\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// Calculate width/aspect ratio for row before adding new item\n\t\t\tpreviousRowWidthWithoutSpacing = this.width - (this.items.length - 1) * this.spacing;\n\t\t\tpreviousAspectRatio = this.items.reduce(function (sum, item) {\n\t\t\t\treturn sum + item.aspectRatio;\n\t\t\t}, 0);\n\t\t\tpreviousTargetAspectRatio = previousRowWidthWithoutSpacing / this.targetRowHeight;\n\n\t\t\tif (Math.abs(newAspectRatio - targetAspectRatio) > Math.abs(previousAspectRatio - previousTargetAspectRatio)) {\n\n\t\t\t\t// Row with new item is us farther away from target than row without; complete layout and reject item.\n\t\t\t\tthis.completeLayout(previousRowWidthWithoutSpacing / previousAspectRatio, 'justify');\n\t\t\t\treturn false;\n\n\t\t\t} else {\n\n\t\t\t\t// Row with new item is us closer to target than row without;\n\t\t\t\t// accept the new item and complete the row layout.\n\t\t\t\tthis.items.push(Object.assign({}, itemData));\n\t\t\t\tthis.completeLayout(rowWidthWithoutSpacing / newAspectRatio, 'justify');\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// New aspect ratio / scaled row height is within tolerance;\n\t\t\t// accept the new item and complete the row layout.\n\t\t\tthis.items.push(Object.assign({}, itemData));\n\t\t\tthis.completeLayout(rowWidthWithoutSpacing / newAspectRatio, 'justify');\n\t\t\treturn true;\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Check if a row has completed its layout.\n\t *\n\t * @method isLayoutComplete\n\t * @return {Boolean} True if complete; false if not.\n\t */\n\n\tisLayoutComplete: function () {\n\t\treturn this.height > 0;\n\t},\n\n\t/**\n\t * Set row height and compute item geometry from that height.\n\t * Will justify items within the row unless instructed not to.\n\t *\n\t * @method completeLayout\n\t * @param newHeight {Number} Set row height to this value.\n\t * @param widowLayoutStyle {String} How should widows display? Supported: left | justify | center\n\t */\n\n\tcompleteLayout: function (newHeight, widowLayoutStyle) {\n\n\t\tvar itemWidthSum = this.left,\n\t\t\trowWidthWithoutSpacing = this.width - (this.items.length - 1) * this.spacing,\n\t\t\tclampedToNativeRatio,\n\t\t\tclampedHeight,\n\t\t\terrorWidthPerItem,\n\t\t\troundedCumulativeErrors,\n\t\t\tsingleItemGeometry,\n\t\t\tcenterOffset;\n\n\t\t// Justify unless explicitly specified otherwise.\n\t\tif (typeof widowLayoutStyle === 'undefined' || ['justify', 'center', 'left'].indexOf(widowLayoutStyle) < 0) {\n\t\t\twidowLayoutStyle = 'left';\n\t\t}\n\n\t\t// Clamp row height to edge case minimum/maximum.\n\t\tclampedHeight = Math.max(this.edgeCaseMinRowHeight, Math.min(newHeight, this.edgeCaseMaxRowHeight));\n\n\t\tif (newHeight !== clampedHeight) {\n\n\t\t\t// If row height was clamped, the resulting row/item aspect ratio will be off,\n\t\t\t// so force it to fit the width (recalculate aspectRatio to match clamped height).\n\t\t\t// NOTE: this will result in cropping/padding commensurate to the amount of clamping.\n\t\t\tthis.height = clampedHeight;\n\t\t\tclampedToNativeRatio = (rowWidthWithoutSpacing / clampedHeight) / (rowWidthWithoutSpacing / newHeight);\n\n\t\t} else {\n\n\t\t\t// If not clamped, leave ratio at 1.0.\n\t\t\tthis.height = newHeight;\n\t\t\tclampedToNativeRatio = 1.0;\n\n\t\t}\n\n\t\t// Compute item geometry based on newHeight.\n\t\tthis.items.forEach(function (item) {\n\n\t\t\titem.top = this.top;\n\t\t\titem.width = item.aspectRatio * this.height * clampedToNativeRatio;\n\t\t\titem.height = this.height;\n\n\t\t\t// Left-to-right.\n\t\t\t// TODO right to left\n\t\t\t// item.left = this.width - itemWidthSum - item.width;\n\t\t\titem.left = itemWidthSum;\n\n\t\t\t// Increment width.\n\t\t\titemWidthSum += item.width + this.spacing;\n\n\t\t}, this);\n\n\t\t// If specified, ensure items fill row and distribute error\n\t\t// caused by rounding width and height across all items.\n\t\tif (widowLayoutStyle === 'justify') {\n\n\t\t\titemWidthSum -= (this.spacing + this.left);\n\n\t\t\terrorWidthPerItem = (itemWidthSum - this.width) / this.items.length;\n\t\t\troundedCumulativeErrors = this.items.map(function (item, i) {\n\t\t\t\treturn Math.round((i + 1) * errorWidthPerItem);\n\t\t\t});\n\n\n\t\t\tif (this.items.length === 1) {\n\n\t\t\t\t// For rows with only one item, adjust item width to fill row.\n\t\t\t\tsingleItemGeometry = this.items[0];\n\t\t\t\tsingleItemGeometry.width -= Math.round(errorWidthPerItem);\n\n\t\t\t} else {\n\n\t\t\t\t// For rows with multiple items, adjust item width and shift items to fill the row,\n\t\t\t\t// while maintaining equal spacing between items in the row.\n\t\t\t\tthis.items.forEach(function (item, i) {\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\titem.left -= roundedCumulativeErrors[i - 1];\n\t\t\t\t\t\titem.width -= (roundedCumulativeErrors[i] - roundedCumulativeErrors[i - 1]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\titem.width -= roundedCumulativeErrors[i];\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else if (widowLayoutStyle === 'center') {\n\n\t\t\t// Center widows\n\t\t\tcenterOffset = (this.width - itemWidthSum) / 2;\n\n\t\t\tthis.items.forEach(function (item) {\n\t\t\t\titem.left += centerOffset + this.spacing;\n\t\t\t}, this);\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Force completion of row layout with current items.\n\t *\n\t * @method forceComplete\n\t * @param fitToWidth {Boolean} Stretch current items to fill the row width.\n\t *                             This will likely result in padding.\n\t * @param fitToWidth {Number}\n\t */\n\n\tforceComplete: function (fitToWidth, rowHeight) {\n\n\t\t// TODO Handle fitting to width\n\t\t// var rowWidthWithoutSpacing = this.width - (this.items.length - 1) * this.spacing,\n\t\t// \tcurrentAspectRatio = this.items.reduce(function (sum, item) {\n\t\t// \t\treturn sum + item.aspectRatio;\n\t\t// \t}, 0);\n\n\t\tif (typeof rowHeight === 'number') {\n\n\t\t\tthis.completeLayout(rowHeight, this.widowLayoutStyle);\n\n\t\t} else {\n\n\t\t\t// Complete using target row height.\n\t\t\tthis.completeLayout(this.targetRowHeight, this.widowLayoutStyle);\n\t\t}\n\n\t},\n\n\t/**\n\t * Return layout data for items within row.\n\t * Note: returns actual list, not a copy.\n\t *\n\t * @method getItems\n\t * @return Layout data for items within row.\n\t */\n\n\tgetItems: function () {\n\t\treturn this.items;\n\t}\n\n};\n","module.exports = function (callback) {\r\n\r\n\tif (document.readyState === 'complete' || document.readyState === 'interactive') {\r\n\t\t// Already ready or interactive, execute callback\r\n\t\tcallback.call();\r\n\t}\r\n\telse if (document.attachEvent) {\r\n\t\t// Old browsers\r\n\t\tdocument.attachEvent('onreadystatechange', function () {\r\n\t\t\tif (document.readyState === 'interactive')\r\n\t\t\t\tcallback.call();\r\n\t\t});\r\n\t}\r\n\telse if (document.addEventListener) {\r\n\t\t// Modern browsers\r\n\t\tdocument.addEventListener('DOMContentLoaded', callback);\r\n\t}\r\n}\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["module","exports","delay","noTrailing","callback","debounceMode","timeoutID","cancelled","lastExec","clearExistingTimeout","clearTimeout","wrapper","arguments_","arguments","self","this","elapsed","Date","now","exec","apply","clear","undefined","setTimeout","cancel","fn","lastArgs","frameId","wrapperFn","_len","length","args","Array","_key","requestAnimationFrame","cancelAnimationFrame","fjGalleryList","updateFjGallery","rafSchd","forEach","item","resize","window","domReady","instanceID","fjGallery","container","userOptions","$container","images","defaults","itemSelector","imageSelector","gutter","rowHeight","rowHeightTolerance","maxRowsCount","Number","POSITIVE_INFINITY","lastRow","transitionDuration","calculateItemsHeight","resizeDebounce","isRtl","css","onInit","onDestroy","onAppendImages","onBeforeJustify","onJustify","atBegin","dataOptions","dataset","pureDataOptions","Object","keys","key","loweCaseOption","substr","toLowerCase","options","pureOptions","throttle","justify","bind","init","el","styles","getPropertyValue","style","$item","properties","onTransitionEnd","join","addEventListener","removeEventListener","push","splice","appendImages","querySelectorAll","addToFjGalleryList","call","$images","get","fjGalleryImage","querySelector","$image","data","width","parseFloat","getAttribute","height","loadSizes","itemData","img","cb","interval","hasSize","addedListeners","onHasSize","naturalWidth","naturalHeight","clearInterval","removeListeners","onLoaded","onError","checkSize","setInterval","getImgDimensions","dimensions","justifyArray","justifyCount","justifiedOptions","containerWidth","getBoundingClientRect","containerPadding","top","right","bottom","left","boxSpacing","targetRowHeight","targetRowHeightTolerance","maxNumRows","showWidows","justifiedData","justifiedLayout","widowCount","lastItemData","boxes","gapSize","i","boxData","additionalTopOffset","rowsMaxHeight","imgI","pop","applyTransition","display","position","transform","rect","containerHeight","removeFromFjGalleryList","transition","val","plugin","items","HTMLElement","nodeType","nodeName","ret","prototype","slice","len","k","constructor","win","global","Row","require","createNewRow","layoutConfig","layoutData","isBreakoutRow","fullWidthBreakoutRowCadence","_rows","_containerHeight","spacing","horizontal","edgeCaseMinRowHeight","edgeCaseMaxRowHeight","rightToLeft","widowLayoutStyle","addRow","row","_layoutItems","concat","getItems","vertical","input","config","forceAspectRatio","assign","isNaN","_awakeItems","_inViewportItems","_leadingOrphans","_trailingOrphans","_orphans","_widowCount","itemLayoutData","itemAdded","currentRow","nextToLastRowHeight","laidOutItems","forcedAspectRatio","aspectRatio","some","Error","addItem","isLayoutComplete","forceComplete","computeLayout","map","params","minAspectRatio","maxAspectRatio","previousRowWidthWithoutSpacing","previousAspectRatio","previousTargetAspectRatio","newItems","rowWidthWithoutSpacing","newAspectRatio","reduce","sum","targetAspectRatio","completeLayout","Math","abs","newHeight","clampedToNativeRatio","clampedHeight","errorWidthPerItem","roundedCumulativeErrors","centerOffset","itemWidthSum","indexOf","max","min","round","fitToWidth","document","readyState","attachEvent","Col","React","props","ref","as","bsPrefix","className","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","spans","classes","brkPoint","span","offset","order","propValue","infix","classNames","useCol","colProps","Component","_jsx","displayName","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}