{"version":3,"file":"static/js/198.67c7bf87.chunk.js","mappings":"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","sources":["components/slider-portfolio/ControlNav.jsx","components/slider-portfolio/NavSlider.jsx","components/slider-portfolio/ContentSlider.jsx","components/social-media/SocialMediaSlider.jsx","components/slider-portfolio/SliderPortfolio.jsx","components/social-media/SocialMedia.jsx","views/slider/SliderTow.jsx"],"sourcesContent":["import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faAngleLeft, faAngleRight} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {useSwiper} from 'swiper/react';\r\nimport {dsnCN} from \"../../hooks/helper\";\r\n\r\nfunction ControlNav({className, ...restProps}) {\r\n    const swiper = useSwiper();\r\n    return (\r\n        <div className={dsnCN('control-nav', className)} {...restProps}>\r\n            <div className=\"prev-container\" onClick={() => swiper.slidePrev()}>\r\n                <FontAwesomeIcon icon={faAngleLeft}/>\r\n            </div>\r\n\r\n            <div className=\"next-container\" onClick={() => swiper.slideNext()}>\r\n                <FontAwesomeIcon icon={faAngleRight}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ControlNav;","import React from 'react';\r\nimport {Controller} from \"swiper\";\r\nimport BgImage from \"../header/BgImage\";\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\n\r\nfunction NavSlider({data, ...restProps}) {\r\n    return (\r\n        <div className=\"nav-slider\">\r\n            <Swiper\r\n                modules={[Controller]}\r\n                slidesPerView={3}\r\n                centeredSlides={true}\r\n                touchRatio={0.2}\r\n                slideToClickedSlide={true}\r\n                direction={\"vertical\"}\r\n                resistanceRatio={0.65}\r\n                spaceBetween={10}\r\n                {...restProps}\r\n            >\r\n                {data.map((item, key) =>\r\n                    <SwiperSlide key={key}>\r\n                        <BgImage className=\"image-bg\" src={item.srcSlider ? item.srcSlider : item.src}\r\n                                 video={item.video}\r\n                                 imageOnly={true} overlay={2}\r\n                                 height={\"100%\"}/>\r\n                        <div className=\"content\">\r\n                            <p>{((key) <= 9 ? \"0\" : '') + (key + 1)}</p>\r\n                        </div>\r\n                    </SwiperSlide>\r\n                )}\r\n            </Swiper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavSlider;","import React from 'react';\r\nimport MetaPost from \"../header/MetaPost\";\r\nimport NavLink from \"../button/NavLink\";\r\nimport {getPortfolioLink} from \"../../api/portfolio/PortfolioData\";\r\nimport ButtonDefault from \"../button/button-default/ButtonDefault\";\r\nimport {faAngleRight} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nfunction ContentSlider({data , activeClass} , ref) {\r\n    const { t } = useTranslation();\r\n\r\n\r\n    return (\r\n        <div className=\"dsn-slider-content hero-content\">\r\n            {data.map((item, key) =>\r\n                <div className={`slide-content ${activeClass === key ? 'dsn-active' : ''}`} key={key}\r\n                     ref={ref}>\r\n                    {item.category && <MetaPost category={item.category} separate=\", \"/>}\r\n                    {item.title &&\r\n                    <h1  className=\"title-heading\"><NavLink to={getPortfolioLink(item)}>{item.title}</NavLink>\r\n                    </h1>}\r\n                    {item.description && <div className=\"dsn-description mt-30\">{item.description}</div>}\r\n                    <ButtonDefault to={getPortfolioLink(item)} className=\"mt-30\" text={t(\"view\")}\r\n                                   icon={faAngleRight}/>\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.forwardRef(ContentSlider);","import React from 'react'\r\nimport './style.scss'\r\n\r\n\r\nimport SocialMedia from \"./SocialMedia\";\r\nimport {dsnCN} from \"../../hooks/helper\";\r\n\r\n\r\nfunction SocialMediaSlider({className}) {\r\n\r\n    return (\r\n\r\n        <div className={dsnCN('main-social', className)}>\r\n            <div className='social-icon'>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 23.3 23.2\">\r\n                    <path\r\n                        d=\"M19.4 15.5c-1.2 0-2.4.6-3.1 1.7L7.8 12v-.7l8.5-5.1c.7 1 1.9 1.6 3.1 1.6 2.1 0 3.9-1.7 3.9-3.9S21.6 0 19.4 0s-3.9 1.7-3.9 3.9v.4L7 9.3c-1.3-1.7-3.7-2-5.4-.8s-2.1 3.7-.8 5.4c.7 1 1.9 1.6 3.1 1.6s2.4-.6 3.1-1.6l8.5 5v.4c0 2.1 1.7 3.9 3.9 3.9s3.9-1.7 3.9-3.9c0-2.1-1.7-3.8-3.9-3.8zm0-13.6c1.1 0 1.9.9 1.9 1.9s-.9 1.9-1.9 1.9-1.9-.7-1.9-1.8.8-2 1.9-2zM3.9 13.6c-1.1 0-1.9-.9-1.9-1.9s.9-1.9 1.9-1.9 1.9.9 1.9 1.9-.8 1.9-1.9 1.9zm15.5 7.8c-1.1 0-1.9-.9-1.9-1.9s.9-1.9 1.9-1.9 1.9.9 1.9 1.9-.8 1.8-1.9 1.9z\"/>\r\n                </svg>\r\n            </div>\r\n\r\n            <SocialMedia className='social-network' />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialMediaSlider","import React, {useEffect, useRef, useState} from 'react';\r\nimport {getPortfolioData} from \"../../api/portfolio/PortfolioData\";\r\nimport {Controller, Parallax} from \"swiper\";\r\nimport gsap from 'gsap';\r\n\r\n\r\n// Importing the CSS\r\nimport 'swiper/css';\r\nimport './style.scss'\r\n\r\n// Component\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport BgImage from \"../header/BgImage\";\r\nimport {useArrayRef} from \"../../hooks/DsnHooks\";\r\nimport dsnSplitting from \"../../hooks/Spltting\";\r\nimport NavSlider from \"./NavSlider\";\r\nimport ContentSlider from \"./ContentSlider\";\r\nimport ControlNav from \"./ControlNav\";\r\nimport SocialMediaSlider from \"../social-media/SocialMediaSlider\";\r\nimport {dsnCN} from \"../../hooks/helper\";\r\n\r\n\r\nexport interface SliderPortfolioProps {\r\n    typeBg?: string | 'full-image' | 'padding-image',\r\n    parallax?: Object,\r\n    tag?: React.ElementType\r\n}\r\n\r\n\r\nfunction SliderPortfolio({className, typeBg, parallax, tag: Tag = 'div'}: SliderPortfolioProps) {\r\n\r\n    const dataProject = getPortfolioData(),\r\n        [contentRef, setContentRef] = useArrayRef(),\r\n        [active, setActive] = useState(0),\r\n        [bgSwiper, setBgSwiper] = useState(null),\r\n        [navSwiper, setNavSwiper] = useState(null),\r\n        rootSlider = useRef(),\r\n        bg = useRef();\r\n\r\n    let tl = gsap.timeline();\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const q = gsap.utils.selector(rootSlider);\r\n        gsap.from(q('.post-info span '), {y: -15, stagger: 0.1, autoAlpha: 0});\r\n        gsap.from(q('.btn-default , .dsn-description'), {\r\n            y: 15, autoAlpha: 0, stagger: 0.1, onComplete: () => {\r\n                gsap.set(q('.btn-default , .dsn-description'), {clearProps:true})\r\n            }\r\n        });\r\n\r\n        contentRef.current.forEach((item) => {\r\n            const title = item.querySelector('.title-heading');\r\n            if (title)\r\n                dsnSplitting.Char(title);\r\n        });\r\n\r\n\r\n        if (!parallax)\r\n            return;\r\n\r\n        gsap.to(bg.current, {\r\n            ...parallax,\r\n            ease: \"none\",\r\n            scrollTrigger: {\r\n                trigger: rootSlider.current,\r\n                start: \"top top\",\r\n                scrub: true\r\n            }\r\n        })\r\n\r\n\r\n    }, []);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    const getContent = (swiper) => {\r\n        const oldNum = swiper.slides[swiper.previousIndex].getAttribute(\"data-dsn-id\");\r\n        const newNum = swiper.slides[swiper.activeIndex].getAttribute(\"data-dsn-id\");\r\n\r\n        return [\r\n            newNum,\r\n            oldNum,\r\n            gsap.utils.selector(contentRef.current[newNum]),\r\n            gsap.utils.selector(contentRef.current[oldNum]),\r\n        ]\r\n    }\r\n\r\n\r\n    const init = (swiper) => {\r\n        swiper.slides.forEach((item) => {\r\n            const video = item.querySelector('.swiper-slide:not(.swiper-slide-active) video');\r\n            if (video)\r\n                video.pause();\r\n        });\r\n\r\n    };\r\n\r\n    const activeVideo = (swiper) => {\r\n        const newVideo = swiper.slides[swiper.activeIndex].querySelector('video');\r\n        const oldVideo = swiper.slides[swiper.previousIndex].querySelector('video');\r\n\r\n        if (newVideo)\r\n            newVideo.play();\r\n        if (oldVideo)\r\n            oldVideo.pause();\r\n    }\r\n\r\n    const swiperChange = (swiper) => {\r\n        const [newNum, oldNum, newContent, oldContent] = getContent(swiper);\r\n        const [newTitle, oldTitle] = [newContent('.title-heading .char'), oldContent('.title-heading .char')]\r\n        const $isRight = oldNum < newNum;\r\n        const animate = {\r\n            show: {autoAlpha: 1, x: 0, stagger: 0.05, ease: \"elastic.inOut\", rotation: 0, scale: 1, yoyo: true},\r\n            hide: {\r\n                autoAlpha: 0,\r\n                x: !$isRight ? \"40%\" : \"-40%\",\r\n                stagger: 0.05,\r\n                ease: \"elastic.inOut\",\r\n                yoyo: true,\r\n                rotation: 8,\r\n                scale: 1.1\r\n            }\r\n        }\r\n        activeVideo(swiper);\r\n        tl.progress(1);\r\n        tl = new gsap.timeline();\r\n\r\n\r\n        tl.fromTo(\r\n            $isRight ? oldTitle : oldTitle.reverse(), 1, animate.show,\r\n            {...animate.hide, onComplete: () => setActive(Number.parseInt(newNum, 10))}\r\n        );\r\n\r\n        tl.fromTo($isRight ? newTitle.reverse() : newTitle, 1.2, animate.hide, animate.show, \"-=.1\");\r\n\r\n\r\n    }\r\n\r\n    const optionSwiper = {\r\n        modules: [Parallax, Controller],\r\n        spaceBetween: 50,\r\n        slidesPerView: 1,\r\n        parallax: true,\r\n        speed: 1500,\r\n        onInit: init,\r\n        onSlideChange: swiperChange,\r\n        onSwiper: setBgSwiper,\r\n        controller: {control: navSwiper}\r\n    }\r\n\r\n    return (\r\n        <Tag className={dsnCN('root-slider half-content v-dark-head background-main', className)} ref={rootSlider}>\r\n\r\n            <div className={`bg-image hero-img ${typeBg}`} ref={bg}>\r\n                <Swiper  {...optionSwiper} grabCursor>\r\n                    {dataProject.map((item, key) =>\r\n                        <SwiperSlide className=\"overflow\" key={key} data-dsn-id={key}>\r\n                            <BgImage className={\"dsn-swiper-parallax-transform\"} src={item.src} video={item.video}\r\n                                     alt={item.title}\r\n                                     overlay={item.overlay} height={\"100%\"} data-swiper-parallax={\"30%\"}/>\r\n                        </SwiperSlide>\r\n                    )}\r\n\r\n                    <div className=\"control-num\">\r\n                        <span className=\"sup\">{((active) <= 9 ? \"0\" : '') + (active + 1)}</span>\r\n                    </div>\r\n                    <ControlNav/>\r\n\r\n                </Swiper>\r\n            </div>\r\n            <ContentSlider data={dataProject} ref={setContentRef} activeClass={active}/>\r\n            <NavSlider data={dataProject}\r\n                       speed={optionSwiper.speed}\r\n                       onSwiper={setNavSwiper}\r\n                       controller={{control: bgSwiper}}\r\n            />\r\n            <SocialMediaSlider/>\r\n        </Tag>\r\n\r\n    );\r\n}\r\n\r\nSliderPortfolio.defaultProps = {\r\n    parallax: {\r\n        yPercent: 30,\r\n    },\r\n}\r\n\r\nexport default SliderPortfolio;","import React, {useEffect, useRef} from 'react'\r\nimport {dsnCN} from '../../hooks/helper'\r\nimport './style.scss'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faFacebookF, faTwitter, faInstagram} from '@fortawesome/free-brands-svg-icons';\r\nimport {splittingItems} from \"../../hooks/Spltting\";\r\n\r\n\r\nfunction SocialMedia({className}) {\r\n    const ref = useRef();\r\n    const socialData = [\r\n        {link: \"#0\", icon: faFacebookF},\r\n        {link: \"#0\", icon: faTwitter},\r\n        {link: \"#0\", icon: faInstagram},\r\n    ];\r\n\r\n\r\n    useEffect(() => {\r\n        splittingItems(ref.current, 'li')\r\n    });\r\n\r\n    return (\r\n        <ul className={dsnCN('social-one', className)} ref={ref}>\r\n            {socialData.map((item, index) =>\r\n                <li key={index}>\r\n                    <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <FontAwesomeIcon icon={item.icon}/>\r\n                    </a>\r\n                </li>\r\n            )}\r\n        </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default SocialMedia","import React from 'react';\r\nimport SliderPortfolio from \"../../components/slider-portfolio/SliderPortfolio\";\r\n\r\nfunction SliderTow() {\r\n    return (\r\n        <SliderPortfolio tag=\"header\" typeBg=\"padding-image\"/>\r\n    );\r\n}\r\n\r\nexport default SliderTow;"],"names":["className","restProps","swiper","useSwiper","dsnCN","onClick","slidePrev","icon","faAngleLeft","slideNext","faAngleRight","data","modules","Controller","slidesPerView","centeredSlides","touchRatio","slideToClickedSlide","direction","resistanceRatio","spaceBetween","map","item","key","BgImage","src","srcSlider","video","imageOnly","overlay","height","ContentSlider","ref","activeClass","t","useTranslation","category","MetaPost","separate","title","NavLink","to","getPortfolioLink","description","ButtonDefault","text","React","xmlns","viewBox","d","SocialMedia","SliderPortfolio","typeBg","parallax","tag","Tag","dataProject","getPortfolioData","useArrayRef","contentRef","setContentRef","useState","active","setActive","bgSwiper","setBgSwiper","navSwiper","setNavSwiper","rootSlider","useRef","bg","tl","gsap","useEffect","q","y","stagger","autoAlpha","onComplete","clearProps","current","forEach","querySelector","dsnSplitting","ease","scrollTrigger","trigger","start","scrub","optionSwiper","Parallax","speed","onInit","slides","pause","onSlideChange","oldNum","previousIndex","getAttribute","newNum","activeIndex","getContent","newContent","oldContent","newTitle","oldTitle","$isRight","animate","show","x","rotation","scale","yoyo","hide","newVideo","oldVideo","play","activeVideo","progress","fromTo","reverse","Number","parseInt","onSwiper","controller","control","grabCursor","alt","ControlNav","defaultProps","yPercent","socialData","link","faFacebookF","faTwitter","faInstagram","splittingItems","index","href","target","rel"],"sourceRoot":""}